
import { supabase } from '@/integrations/supabase/client';
import { competitionParticipationService } from './competitionParticipationService';
import { dailyCompetitionFinalizationService } from './dailyCompetition/dailyCompetitionFinalization';
import { weeklyCompetitionFinalizationService } from './weeklyCompetitionFinalizationService';

/**
 * Servi√ßo para finaliza√ß√£o de competi√ß√µes com nova regra de hist√≥rico
 */
class CompetitionFinalizationService {
  async finalizeDailyCompetition(competitionId: string): Promise<void> {
    try {
      console.log('üèÅ Finalizando competi√ß√£o di√°ria (nova din√¢mica - pontos j√° na semanal)...');

      // Usar o servi√ßo espec√≠fico para competi√ß√µes di√°rias
      await dailyCompetitionFinalizationService.finalizeDailyCompetition(competitionId);
      
      console.log('‚úÖ Competi√ß√£o di√°ria finalizada com sucesso');
    } catch (error) {
      console.error('‚ùå Erro ao finalizar competi√ß√£o di√°ria:', error);
    }
  }

  async finalizeWeeklyCompetition(competitionId: string): Promise<void> {
    try {
      console.log('üèÅ Finalizando competi√ß√£o semanal com nova regra de hist√≥rico...');

      // Usar o novo servi√ßo com regras de finaliza√ß√£o autom√°tica
      await weeklyCompetitionFinalizationService.finalizeWeeklyCompetition(competitionId);

      // Buscar e finalizar todas as competi√ß√µes di√°rias vinculadas
      const { data: linkedDailyCompetitions, error: linkedError } = await supabase
        .from('custom_competitions')
        .select('id')
        .eq('weekly_tournament_id', competitionId)
        .eq('status', 'active');

      if (!linkedError && linkedDailyCompetitions) {
        for (const dailyComp of linkedDailyCompetitions) {
          await this.finalizeDailyCompetition(dailyComp.id);
        }
        console.log(`‚úÖ ${linkedDailyCompetitions.length} competi√ß√µes di√°rias vinculadas finalizadas`);
      }

      console.log('‚úÖ Competi√ß√£o semanal finalizada com hist√≥rico salvo e pontua√ß√µes zeradas');
    } catch (error) {
      console.error('‚ùå Erro ao finalizar competi√ß√£o semanal:', error);
    }
  }
}

export const competitionFinalizationService = new CompetitionFinalizationService();
