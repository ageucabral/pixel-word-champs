
import { supabase } from '@/integrations/supabase/client';
import { calculateDailyCompetitionStatus, calculateWeeklyCompetitionStatus } from '@/utils/brasiliaTime';

export class CompetitionStatusService {
  /**
   * FUN√á√ÉO UNIFICADA: Calcula o status correto baseado no tipo de competi√ß√£o
   * REMOVIDO: Duplica√ß√£o de l√≥gica - agora usa fun√ß√µes centralizadas
   */
  static calculateCorrectStatus(competition: { competition_type?: string; start_date: string; end_date: string }): string {
    // Para competi√ß√µes di√°rias, usar l√≥gica espec√≠fica de Bras√≠lia
    if (competition.competition_type === 'challenge') {
      console.log('üìÖ Aplicando regras de status para competi√ß√£o DI√ÅRIA');
      return calculateDailyCompetitionStatus(competition.start_date);
    } else {
      console.log('üìä Aplicando regras de status para competi√ß√£o SEMANAL/PADR√ÉO');
      return calculateWeeklyCompetitionStatus(competition.start_date, competition.end_date);
    }
  }

  /**
   * Atualiza o status de uma competi√ß√£o espec√≠fica
   * SIMPLIFICADO: Removida duplica√ß√£o de l√≥gica
   */
  static async updateSingleCompetitionStatus(competitionId: string): Promise<void> {
    try {
      console.log('üîÑ Atualizando status da competi√ß√£o:', competitionId);
      
      // Buscar dados da competi√ß√£o
      const { data: competition, error: fetchError } = await supabase
        .from('custom_competitions')
        .select('id, start_date, end_date, status, competition_type, title')
        .eq('id', competitionId)
        .single();

      if (fetchError || !competition) {
        console.error('‚ùå Erro ao buscar competi√ß√£o:', fetchError);
        return;
      }

      // Usar a fun√ß√£o unificada para calcular o status correto
      const correctStatus = this.calculateCorrectStatus(competition);
      
      // Atualizar apenas se o status mudou
      if (competition.status !== correctStatus) {
        console.log(`üìù Atualizando status de "${competition.status}" para "${correctStatus}" (${competition.title})`);
        
        const { error: updateError } = await supabase
          .from('custom_competitions')
          .update({ 
            status: correctStatus,
            updated_at: new Date().toISOString()
          })
          .eq('id', competitionId);

        if (updateError) {
          console.error('‚ùå Erro ao atualizar status:', updateError);
        } else {
          console.log('‚úÖ Status atualizado com sucesso');
        }
      } else {
        console.log('‚ÑπÔ∏è Status j√° est√° correto:', correctStatus);
      }
    } catch (error) {
      console.error('‚ùå Erro inesperado ao atualizar status:', error);
    }
  }

  /**
   * Atualiza status de todas as competi√ß√µes
   * SIMPLIFICADO: Usa a l√≥gica unificada
   */
  static async updateAllCompetitionsStatus(): Promise<void> {
    try {
      console.log('üîÑ Atualizando status de todas as competi√ß√µes...');
      
      // Buscar todas as competi√ß√µes
      const { data: competitions, error } = await supabase
        .from('custom_competitions')
        .select('id, start_date, end_date, status, title, competition_type');

      if (error || !competitions) {
        console.error('‚ùå Erro ao buscar competi√ß√µes:', error);
        return;
      }

      console.log(`üìã Encontradas ${competitions.length} competi√ß√µes para verificar`);

      // Atualizar cada competi√ß√£o usando a l√≥gica unificada
      for (const competition of competitions) {
        console.log(`üîç Verificando competi√ß√£o: "${competition.title}" (${competition.competition_type})`);
        
        const correctStatus = this.calculateCorrectStatus(competition);
        
        if (competition.status !== correctStatus) {
          console.log(`üîÑ Necess√°ria atualiza√ß√£o: ${competition.status} ‚Üí ${correctStatus}`);
          await this.updateSingleCompetitionStatus(competition.id);
        } else {
          console.log(`‚úÖ Status j√° correto: ${correctStatus}`);
        }
      }
      
      console.log('‚úÖ Atualiza√ß√£o de status conclu√≠da');
    } catch (error) {
      console.error('‚ùå Erro ao atualizar status das competi√ß√µes:', error);
    }
  }
}
